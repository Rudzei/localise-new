/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
html{
  line-height:1.15;
  -webkit-text-size-adjust:100%;
}
body{
  margin:0;
}
main{
  display:block;
}
h1{
  font-size:2em;
  margin:0.67em 0;
}
hr{
  box-sizing:content-box;
  height:0;
  overflow:visible;
}
pre{
  font-family:monospace, monospace;
  font-size:1em;
}
a{
  background-color:transparent;
}
abbr[title]{
  border-bottom:none;
  text-decoration:underline;
  text-decoration:underline dotted;
}
b,
strong{
  font-weight:bolder;
}
code,
kbd,
samp{
  font-family:monospace, monospace;
  font-size:1em;
}
small{
  font-size:80%;
}
sub,
sup{
  font-size:75%;
  line-height:0;
  position:relative;
  vertical-align:baseline;
}

sub{
  bottom:-0.25em;
}

sup{
  top:-0.5em;
}
img{
  border-style:none;
}
button,
input,
optgroup,
select,
textarea{
  font-family:inherit;
  font-size:100%;
  line-height:1.15;
  margin:0;
}
button,
input{
  overflow:visible;
}
button,
select{
  text-transform:none;
}
button,
[type=button],
[type=reset],
[type=submit]{
  -webkit-appearance:button;
}
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner{
  border-style:none;
  padding:0;
}
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring{
  outline:1px dotted ButtonText;
}
fieldset{
  padding:0.35em 0.75em 0.625em;
}
legend{
  box-sizing:border-box;
  color:inherit;
  display:table;
  max-width:100%;
  padding:0;
  white-space:normal;
}
progress{
  vertical-align:baseline;
}
textarea{
  overflow:auto;
}
[type=checkbox],
[type=radio]{
  box-sizing:border-box;
  padding:0;
}
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button{
  height:auto;
}
[type=search]{
  -webkit-appearance:textfield;
  outline-offset:-2px;
}
[type=search]::-webkit-search-decoration{
  -webkit-appearance:none;
}
::-webkit-file-upload-button{
  -webkit-appearance:button;
  font:inherit;
}
details{
  display:block;
}
summary{
  display:list-item;
}
template{
  display:none;
}
[hidden]{
  display:none;
}

@font-face{
  font-family:"Graphik LCG";
  font-weight:normal;
  font-style:normal;
  font-display:swap;
  src:url("GraphikLCG-Regular.woff2") format("woff2"), url("GraphikLCG-Regular.woff") format("woff");
}
@font-face{
  font-family:"Graphik LCG";
  font-weight:600;
  font-style:normal;
  font-display:swap;
  src:url("GraphikLCG-Semibold.woff2") format("woff2"), url("GraphikLCG-Semibold.woff") format("woff");
}
*,
*::before,
*::after{
  box-sizing:border-box;
}

html{
  overflow-x:hidden;
  overflow-y:scroll;
  font-size:16px;
}

body{
  font-family:"Graphik LCG", sans-serif;
  font-size:15px;
  font-weight:400;
}

a{
  text-decoration:none;
  color:#000000;
}

h2{
  text-align:center;
  font-weight:600;
  line-height:1.2;
}

.container{
  width:min(100% - 40px, 1290px);
  margin-inline:auto;
}

.btn{
  min-width:120px;
  min-height:45px;
  color:#ffffff;
  border-width:1px;
  border-style:solid;
  font-size:1rem;
  font-weight:600;
}

.btn--light{
  color:#000000;
  border-color:#000000;
  background-color:#ffffff;
}

.btn--accent{
  border-color:#ff6336;
  background-color:#ff6336;
}

.btn--md{
  min-width:160px;
  min-height:60px;
}

.header::after{
  position:absolute;
  left:50%;
  width:100%;
  height:1px;
  content:"";
  transform:translateX(-50%);
  background-color:#EEEEEE;
}
.header__menu{
  position:relative;
  display:flex;
  align-items:center;
  flex-wrap:wrap;
  padding-top:25px;
  padding-bottom:25px;
  gap:25px 35px;
}
.navbar__list{
  display:flex;
  align-items:center;
  flex-wrap:wrap;
  column-gap:25px;
  margin:0;
  padding:0;
  list-style:none;
}
.navbar__link{
  display:block;
  padding:1em;
}

.header-navbar__btn{
  position:relative;
  width:40px;
  height:30px;
  cursor:pointer;
}
.header-navbar__btn span{
  position:absolute;
  left:0;
  display:block;
  width:100%;
  height:5px;
  transition:0.25s ease-in-out;
  transform:rotate(0deg);
  opacity:1;
  border-radius:5px;
  background-color:#ff6336;
}
.header-navbar__btn span:nth-of-type(1){
  top:0;
}
.header-navbar__btn span:nth-of-type(2){
  top:12px;
}
.header-navbar__btn span:nth-of-type(3){
  top:24px;
}
.header-navbar__btn.active span:nth-of-type(1){
  top:12px;
  transform:rotate(135deg);
}
.header-navbar__btn.active span:nth-of-type(2){
  left:-40px;
  opacity:0;
}
.header-navbar__btn.active span:nth-of-type(3){
  top:12px;
  transform:rotate(-135deg);
}

.actions{
  display:flex;
  gap:10px;
}

.hero{
  display:grid;
  align-items:center;
  padding:128px 0 172px;
  gap:50px 0;
}
.hero__title{
  margin:0;
  font-weight:600;
  line-height:1.08;
  grid-area:ttl;
}
.hero__description{
  font-size:25px;
  font-weight:400;
  line-height:1.4;
  grid-area:dsc;
}
.hero__actions{
  display:flex;
  gap:10px;
  grid-area:act;
}
.hero__notes{
  line-height:1.67;
  grid-area:nts;
}
.hero__picture{
  grid-area:pic;
}

.brands{
  background-color:#FF9C7D;
}
.brands__title{
  margin:0 auto 50px;
  max-width:720px;
}
.brands__list{
  display:grid;
  align-items:center;
  gap:30px 20px;
}
@media (min-width: 576px){
  .header__actions{
    margin-left:auto;
  }
}
@media (min-width: 992px){
  .btn--sm{
    min-width:120px;
    min-height:45px;
  }
  .hero__description{
    max-width:470px;
  }
}
@media (min-width: 1200px){
  h2{
    font-size:50px;
  }
  .header-navbar__btn{
    display:none;
  }
  .hero{
    gap:50px 0;
    grid-template-areas:"ttl pic" "dsc pic" "act pic" "nts pic";
    grid-template-columns:610px 1fr;
  }
  .hero__title{
    font-size:65px;
  }
  .hero__description{
    font-size:25px;
  }
  .hero__notes{
    margin-top:-23px;
  }
  .hero__image{
    width:107%;
    margin-left:-70px;
  }
  .brands{
    padding:120px 0;
  }
  .brands__list{
    grid-template-columns:repeat(auto-fit, minmax(50px, max-content));
    justify-content:space-between;
  }
}
@media (max-width: 1199.8px){
  .header__actions{
    margin-right:auto;
  }
  .navbar{
    order:1;
  }
  .navbar__list{
    display:none;
  }
  .hero__title{
    font-size:45px;
  }
  .hero__description{
    font-size:20px;
  }
}
@media (max-width: 1199.8px) and (min-width: 992px){
  h2{
    font-size:40px;
  }
  .hero{
    gap:25px 0;
    grid-template-areas:"ttl pic" "dsc pic" "act pic" "nts pic";
    grid-template-columns:1fr 1fr;
  }
  .hero__image{
    width:100%;
  }
  .brands{
    padding:100px 0;
  }
  .brands__list{
    grid-template-columns:repeat(3, minmax(50px, max-content));
    justify-content:space-evenly;
  }
}
@media (max-width: 991.8px){
  h2{
    font-size:30px;
  }
  .btn--sm{
    min-width:100px;
    min-height:40px;
  }
  .hero{
    max-width:610px;
    text-align:center;
    gap:30px 0;
    grid-template-areas:"ttl" "dsc" "pic" "act" "nts";
  }
  .hero__actions{
    justify-content:center;
  }
  .brands{
    padding:80px 0;
  }
}
@media (max-width: 991.8px) and (min-width: 768px){
  .hero__image{
    width:50%;
  }
  .brands__list{
    grid-template-columns:repeat(2, minmax(50px, max-content));
    justify-content:space-evenly;
  }
}
@media (max-width: 767.8px){
  .hero__image{
    width:70%;
  }
  .brands__list{
    justify-content:center;
  }
}
@media (max-width: 575.8px){
  .header__logo{
    width:100%;
    text-align:center;
  }
  .hero__actions{
    flex-direction:column;
    align-items:center;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */